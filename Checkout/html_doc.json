{
    "project": "Checkout",
    "Topics": [
        {
            "title": "Overview",
            "content": "<div id=\"main-content\" class=\"wiki-content\">\r\n<p class=\"western\">Orbipay Checkout&copy; is a payment platform that merchants can use in order to accept payments from their customers who place orders on their websites. The payments can be accepted on a one-time basis from credit cards, debit cards or bank accounts.</p>\r\n</div>\r\n<div id=\"likes-and-labels-container\">&nbsp;</div>",
            "subTopics": [
                {
                    "title": "How Checkout works",
                    "content": "<p><span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" src=\"https://bapps.alacriti.com/confluence/download/attachments/44140811/image2017-4-6%2017%3A17%3A19.png?version=1&amp;modificationDate=1491513471000&amp;api=v2\" height=\"250\" data-image-src=\"/confluence/download/attachments/44140811/image2017-4-6%2017%3A17%3A19.png?version=1&amp;modificationDate=1491513471000&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"44140810\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"image2017-4-6 17:17:19.png\" data-base-url=\"https://bapps.alacriti.com/confluence\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"44140811\" data-linked-resource-container-version=\"3\" /></span></p>\r\n<p>&nbsp;</p>\r\n<ol>\r\n<li>\r\n<p>Orbipay Checkout&copy; is a Payment Solution Gateway Provider and has Public Key PK0 and Secret Key SK0. Any Partner/Merchant who want to offer payments related functionality using Checkout will be given a key pair per environment (PKi and Ski (2048 bits, Algorithm- RSA)).</p>\r\n</li>\r\n<li>\r\n<p>Orbipay Checkout&copy; provides two libraries, a) Browser SDK and b) Client SDK</p>\r\n</li>\r\n<li>\r\n<p>Browser SDK needs to be imported on the payment page and the Client SDK has to be added as a dependency to the server side code.</p>\r\n</li>\r\n<li>\r\n<p>Browser SDK takes client Id and callback URL as input.</p>\r\n</li>\r\n<li>\r\n<p>Client SDK comes with a checkout_client.properties file for initial configurations.</p>\r\n</li>\r\n<li>\r\n<p>Client SDK also contains the key pair of that merchant in a java key store(Password protected) .</p>\r\n</li>\r\n<li>\r\n<p>Java key store (JKS) file password, key alias and Ski password are configurable in config.properties.</p>\r\n</li>\r\n<li>\r\n<p>Merchant&rsquo;s web front-end posts the retrieve merchant to Checkout and get the response back as a pop up form if given client id id correct.</p>\r\n</li>\r\n<li>\r\n<p>Merchant&rsquo;s web front-end posts the payment details to Orbipay Checkout&copy; server(Encrypted with PK0)</p>\r\n</li>\r\n<li>\r\n<p>Orbipay Checkout&copy; validates and generates Payment-Token and sends it back to the web front-end(Encrypted with PK1 and Signed by SK0).</p>\r\n</li>\r\n<li>\r\n<p>Web front-end posts the order details and the Payment-Token to the Merchant Server (Using Browser SDK).</p>\r\n</li>\r\n<li>\r\n<p>Merchant back-end server using Server SDK verifies the authenticity of the Payment-Token by decrypting it and submits it to Orbipay Checkout&copy; for payment confirmation.</p>\r\n</li>\r\n<li>\r\n<p>Orbipay Checkout&copy; processes the payment and sends Success/Failure response to Merchant back-end server.</p>\r\n</li>\r\n<li>\r\n<p>Merchant back-end server notifies the Order Success/Failure response to the web front-end.</p>\r\n</li>\r\n</ol>"
                }
            ]
        },
        {
            "title": "Design Documents",
            "content": "<p class=\"western\">The main objective is to present one of the integration approach where the customer stays on merchant website during the entire purchase process (i.e., does not get redirected to Orbipay&rsquo;s site etc). All the work of payment capture process is done by Orbipay Checkout&copy; behind-the-scenes. This approach to enable a merchant to accept payments is achieved through <strong>tokenization</strong>.</p>\r\n<p class=\"western\">&nbsp;</p>\r\n<p class=\"western\">&nbsp;</p>\r\n<p class=\"western\"><span class=\"confluence-embedded-file-wrapper confluence-embedded-manual-size\"><img class=\"confluence-embedded-image\" src=\"https://bapps.alacriti.com/confluence/download/attachments/44140803/Checkout_E2E_Design.png?version=1&amp;modificationDate=1493322400000&amp;api=v2\" height=\"250\" data-image-src=\"/confluence/download/attachments/44140803/Checkout_E2E_Design.png?version=1&amp;modificationDate=1493322400000&amp;api=v2\" data-unresolved-comment-count=\"0\" data-linked-resource-id=\"44142858\" data-linked-resource-version=\"1\" data-linked-resource-type=\"attachment\" data-linked-resource-default-alias=\"Checkout_E2E_Design.png\" data-base-url=\"https://bapps.alacriti.com/confluence\" data-linked-resource-content-type=\"image/png\" data-linked-resource-container-id=\"44140803\" data-linked-resource-container-version=\"4\" /></span></p>",
            "subTopics": [
                {
                    "title": "Client On-boarding",
                    "content": "<p class=\"western\">Client On-boarding involves the following</p>\r\n<p class=\"western\">&bull; Registering with the Orbipay&copy; platform</p>\r\n<p class=\"western\">&bull; Generating security keys (<strong>Public Key &amp; Secret Key</strong> &ndash; for both Test and Live modes)</p>\r\n<p class=\"western\">&bull; Registering with Checkout application</p>\r\n<p class=\"western\">&bull; Download the Platform specific <strong>Server</strong> and <strong>Client SDKs</strong></p>"
                }
            ]
        }
    ],
    "apiReference": "https://www.google.co.in/"
}