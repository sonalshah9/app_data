{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Orbipay Wallet APIs",
        "description": "API specification to use the Orbipay Wallet APIs. This documentation covers the wallet related APIs.\n",
        "contact": {
            "name": "Orbipay Team",
            "email": "support@billerpayments.com"
        },
        "license": {
            "name": "© Alacriti Inc",
            "url": "http://www.alacriti.com/"
        }
    },
    "tags": [
        {
            "name": "Customer",
            "description": "This section outlines the APIs required to exchange and manage customer information, such as create customer.\n"
        },
        {
            "name": "Bank Account",
            "description": "This section outlines the APIs required to enable customers to manage their bank accounts.\n"
        },
        {
            "name": "Card",
            "description": "This section outlines the APIs required to enable customers to manage their cards.\n"
        },
        {
            "name": "Transfer",
            "description": "This section outlines the APIs required to transer money to other wallet users and non-wallet users as well.\n"
        },
        {
            "name": "CashIn",
            "description": "This section outlines the APIs required to top up the wallet.\n"
        },
        {
            "name": "CashOut",
            "description": "This section outlines the APIs required to Cashout to their bank accounts.\n"
        },
        {
            "name": "Transaction",
            "description": "This section outlines the APIs required to get informations about the wallet transactions.\n"
        },
        {
            "name": "Wallet",
            "description": "This section outlines the APIs required to enable customers to manage their wallet.\n"
        }
    ],
    "host": "www.orbipay.com",
    "basePath": "/walletapi/v1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/customers": {
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Create Customer",
                "description": "The Create Customer API is used to register a customer with Orbipay  Wallet.",
                "operationId": "createCustomer",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "body",
                        "description": "This JSON contains all the attributes of customer to be created.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "first_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": " This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "last_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s last name, and will appear on all types of detail records."
                                },
                                "middle_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s middle initial and will appear on all types of detail records."
                                },
                                "date_of_birth": {
                                    "description": "Date of Birth.  ISO8601 full-date format, YYYY-MM-DD",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "government_issued_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Provide SSN in case of Customers from US."
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay  walllet."
                                },
                                "phone_number": {
                                    "description": "Home phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "social_account_id": {
                                    "type": "string",
                                    "description": "id provided by the social networking sites."
                                },
                                "register_login_id": {
                                    "type": "string",
                                    "description": "Email or phone number used for login."
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Create Customer API is populated with the customer id issued by OrbiPay-Wallet for the customer.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "first_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": " This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "last_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s last name, and will appear on all types of detail records."
                                },
                                "middle_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s middle initial and will appear on all types of detail records."
                                },
                                "date_of_birth": {
                                    "description": "Date of Birth.  ISO8601 full-date format, YYYY-MM-DD",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "government_issued_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Provide SSN in case of Customers from US."
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay  walllet."
                                },
                                "phone_number": {
                                    "description": "Home phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "social_account_id": {
                                    "type": "string",
                                    "description": "id provided by the social networking sites."
                                },
                                "register_login_id": {
                                    "type": "string",
                                    "description": "Email or phone number used for login."
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{ID_CUSTOMER}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get Customer",
                "description": "The Get Customer API is used to retrieve the details of the customer based on the id.",
                "operationId": "getCustomer",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Get Customer API is populated with the customer details as customer object.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "first_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": " This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "last_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s last name, and will appear on all types of detail records."
                                },
                                "middle_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s middle initial and will appear on all types of detail records."
                                },
                                "date_of_birth": {
                                    "description": "Date of Birth.  ISO8601 full-date format, YYYY-MM-DD",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "government_issued_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Provide SSN in case of Customers from US."
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay  walllet."
                                },
                                "phone_number": {
                                    "description": "Home phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "social_account_id": {
                                    "type": "string",
                                    "description": "id provided by the social networking sites."
                                },
                                "register_login_id": {
                                    "type": "string",
                                    "description": "Email or phone number used for login."
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update Customer",
                "description": "The Update Customer API is used to edit the customer's personal informations or the customer's status. Only the information being updated needs to be populated in customer object sent in the request, along with the id of the customer being updated.",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "body",
                        "description": "This JSON contains all the attributes of customer to be created.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "first_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": " This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "last_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s last name, and will appear on all types of detail records."
                                },
                                "middle_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s middle initial and will appear on all types of detail records."
                                },
                                "date_of_birth": {
                                    "description": "Date of Birth.  ISO8601 full-date format, YYYY-MM-DD",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "government_issued_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Provide SSN in case of Customers from US."
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay  walllet."
                                },
                                "phone_number": {
                                    "description": "Home phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "social_account_id": {
                                    "type": "string",
                                    "description": "id provided by the social networking sites."
                                },
                                "register_login_id": {
                                    "type": "string",
                                    "description": "Email or phone number used for login."
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Update Customer API is populated with the updated customer details as customer object.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "first_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": " This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "last_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s last name, and will appear on all types of detail records."
                                },
                                "middle_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains the account holder’s middle initial and will appear on all types of detail records."
                                },
                                "date_of_birth": {
                                    "description": "Date of Birth.  ISO8601 full-date format, YYYY-MM-DD",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "government_issued_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Provide SSN in case of Customers from US."
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay  walllet."
                                },
                                "phone_number": {
                                    "description": "Home phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "social_account_id": {
                                    "type": "string",
                                    "description": "id provided by the social networking sites."
                                },
                                "register_login_id": {
                                    "type": "string",
                                    "description": "Email or phone number used for login."
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{ID_CUSTOMER}/bankAccounts": {
            "post": {
                "tags": [
                    "Bank Account"
                ],
                "summary": "Add Bank Account",
                "description": "This API is used to add a bank account for the customer. The bank account is available for cashout. An exhaustive set of account types are supported as bank accounts as indicated in the field account_subtype. ABA routing number is mandatory for bank accounts. ",
                "operationId": "addBankAccount",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "This JSON contains all the attributes of bank account to be added to customer.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "account_number",
                                "currency_code3d"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "aba_routing_number": {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 9,
                                    "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                    "example": "031201360"
                                },
                                "account_issuing_institution_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "TD BANK, NA"
                                },
                                "account_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "savings",
                                        "checking",
                                        "money_market"
                                    ],
                                    "description": "Account Sub Type indicates the sub type of a funding account.",
                                    "example": "savings"
                                },
                                "account_holder_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to add Bank Account API is populated with the account id issued by OrbiPay-Wallet for the customer bank account.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "account_number",
                                "currency_code3d"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "aba_routing_number": {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 9,
                                    "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                    "example": "031201360"
                                },
                                "account_issuing_institution_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "TD BANK, NA"
                                },
                                "account_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "savings",
                                        "checking",
                                        "money_market"
                                    ],
                                    "description": "Account Sub Type indicates the sub type of a funding account.",
                                    "example": "savings"
                                },
                                "account_holder_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{ID_CUSTOMER}/cards": {
            "post": {
                "tags": [
                    "Card"
                ],
                "summary": "Add Card",
                "description": "This API is used to add a card of a customer. The card is available for servicing the customer for cashIn. An exhaustive set of account types are supported as as accounts as indicated in the field account_subtype. Expiry date, address fields and Card CVV are required for card accounts.",
                "operationId": "addCard",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "This JSON contains all the attributes of Card account to be added to customer.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "currency_code3d",
                                "card_number"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "card_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "visa_credit",
                                        "mastercard_credit",
                                        "american_express_credit",
                                        "discover_credit",
                                        "visa_debit",
                                        "mastercard_debit",
                                        "discover_debit"
                                    ],
                                    "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                    "example": "visa_credit"
                                },
                                "expiry_date": {
                                    "type": "string",
                                    "pattern": "^[0-9/]{5,7}$",
                                    "minLength": 5,
                                    "maxLength": 7,
                                    "description": "Expiry date of the account is of format mm/yy",
                                    "example": "11/29"
                                },
                                "card_cvv_number": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3,4}$",
                                    "minLength": 3,
                                    "maxLength": 4,
                                    "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                    "example": "123"
                                },
                                "name_on_card": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Add Card API is populated with the Identifiers issued by OrbiPay-Wallet for the Card Accounts.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "currency_code3d",
                                "card_number"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "card_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "visa_credit",
                                        "mastercard_credit",
                                        "american_express_credit",
                                        "discover_credit",
                                        "visa_debit",
                                        "mastercard_debit",
                                        "discover_debit"
                                    ],
                                    "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                    "example": "visa_credit"
                                },
                                "expiry_date": {
                                    "type": "string",
                                    "pattern": "^[0-9/]{5,7}$",
                                    "minLength": 5,
                                    "maxLength": 7,
                                    "description": "Expiry date of the account is of format mm/yy",
                                    "example": "11/29"
                                },
                                "card_cvv_number": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3,4}$",
                                    "minLength": 3,
                                    "maxLength": 4,
                                    "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                    "example": "123"
                                },
                                "name_on_card": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Create Wallet",
                "description": "Creates a wallet for the customer.",
                "operationId": "createWallet",
                "parameters": [
                    {
                        "name": "wallet",
                        "in": "body",
                        "description": "This JSON contains all the attributes of wallet to be created.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet."
                                },
                                "creation_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "balance": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "memo": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,200}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "descritption about the wallet."
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Create wallet API is populated with the  Identifiers issued by OrbiPay-Wallet for the Wallet.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet."
                                },
                                "creation_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "balance": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "memo": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,200}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "descritption about the wallet."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallets/{ID_WALLET}": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Get Wallet",
                "description": "The Get Wallet API is used to retrieve the details of the wallet.",
                "operationId": "getWallet",
                "parameters": [
                    {
                        "name": "ID_WALLET",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the wallet instance issued by orbipay wallet."
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Get Wallet API is populated with the          Identifiers issued by OrbiPay-Wallet for the Wallet.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet."
                                },
                                "creation_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "balance": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "memo": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,200}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "descritption about the wallet."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Update Wallet",
                "description": "Updates the wallet.",
                "operationId": "updateWallet",
                "parameters": [
                    {
                        "name": "wallet",
                        "in": "body",
                        "description": "This JSON contains all the attributes of wallet to be updated",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet."
                                },
                                "creation_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "balance": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "memo": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,200}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "descritption about the wallet."
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    },
                    {
                        "name": "ID_WALLET",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the wallet instance issued by orbipay wallet."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to update wallet API is populated with the updated details of wallet for a customer.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet."
                                },
                                "creation_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "balance": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "memo": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,200}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "descritption about the wallet."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{ID_CUSTOMER}/bankAccounts/retrieve": {
            "post": {
                "tags": [
                    "Bank Account"
                ],
                "summary": "Retrieve Customer's Bank Accounts",
                "description": "This API is used to retrieve a list of bank accounts associated with a customer. The number of bank accounts retrieved can be modified using the initial_records request parameter. The ID_CUSTOMER  is issued by OrbiPay Wallet .",
                "operationId": "Retrieve Funding Accounts",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "initial_records",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "initial count of records to be retrieved, for example 10"
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Retrieve Customer's Bnak Accounts API is populated with the list bank accounts associated with a customer.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "funding_account_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "account_number",
                                            "currency_code3d"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "customer_id": {
                                                "type": "string",
                                                "pattern": "[a-z0-9]{0,50}",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                            },
                                            "aba_routing_number": {
                                                "type": "string",
                                                "minLength": 0,
                                                "maxLength": 9,
                                                "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                                "example": "031201360"
                                            },
                                            "account_issuing_institution_name": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "example": "TD BANK, NA"
                                            },
                                            "account_number": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{3,32}$",
                                                "minLength": 3,
                                                "maxLength": 32,
                                                "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                                "example": "4124939999999990"
                                            },
                                            "currency_code3d": {
                                                "type": "string",
                                                "pattern": "^[A-Za-z]{3}$",
                                                "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                                "example": "USD"
                                            },
                                            "account_subtype": {
                                                "type": "string",
                                                "enum": [
                                                    "savings",
                                                    "checking",
                                                    "money_market"
                                                ],
                                                "description": "Account Sub Type indicates the sub type of a funding account.",
                                                "example": "savings"
                                            },
                                            "account_holder_name": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "example": "Will Smith"
                                            },
                                            "address": {
                                                "type": "object",
                                                "required": [
                                                    "address_line1",
                                                    "address_city",
                                                    "address_state",
                                                    "address_country",
                                                    "address_zip1"
                                                ],
                                                "properties": {
                                                    "address_line1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_line2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_city": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_state": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_country": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,3}",
                                                        "minLength": 0,
                                                        "maxLength": 3,
                                                        "description": "The 3 digit ISO country code."
                                                    },
                                                    "address_zip1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    },
                                                    "address_zip2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "total_results_count": {
                                    "type": "number",
                                    "description": "total number of bank accounts available with matching criteria",
                                    "example": "100"
                                },
                                "has_more_results": {
                                    "type": "string",
                                    "description": "is true if there are more results or pages",
                                    "example": "true"
                                },
                                "query_id": {
                                    "type": "string",
                                    "description": "used for retreiving previous and next pages",
                                    "example": "10"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Bank Account"
                ],
                "summary": "Get Customer's Bank Accounts Page",
                "description": "This API is used to retrieve and display customer bank account information with pagination.",
                "operationId": "Get Bank Accounts",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "query id of the result in the context, for example 15"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "starting id of the result in the context, for example 11"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "starting id of the result in the context, for example 20"
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Get Customer's Funding Accounts API is populated with the list bank accounts associated with a customer for the query.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "funding_account_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "account_number",
                                            "currency_code3d"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "customer_id": {
                                                "type": "string",
                                                "pattern": "[a-z0-9]{0,50}",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                            },
                                            "aba_routing_number": {
                                                "type": "string",
                                                "minLength": 0,
                                                "maxLength": 9,
                                                "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                                "example": "031201360"
                                            },
                                            "account_issuing_institution_name": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "example": "TD BANK, NA"
                                            },
                                            "account_number": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{3,32}$",
                                                "minLength": 3,
                                                "maxLength": 32,
                                                "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                                "example": "4124939999999990"
                                            },
                                            "currency_code3d": {
                                                "type": "string",
                                                "pattern": "^[A-Za-z]{3}$",
                                                "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                                "example": "USD"
                                            },
                                            "account_subtype": {
                                                "type": "string",
                                                "enum": [
                                                    "savings",
                                                    "checking",
                                                    "money_market"
                                                ],
                                                "description": "Account Sub Type indicates the sub type of a funding account.",
                                                "example": "savings"
                                            },
                                            "account_holder_name": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "example": "Will Smith"
                                            },
                                            "address": {
                                                "type": "object",
                                                "required": [
                                                    "address_line1",
                                                    "address_city",
                                                    "address_state",
                                                    "address_country",
                                                    "address_zip1"
                                                ],
                                                "properties": {
                                                    "address_line1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_line2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_city": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_state": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_country": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,3}",
                                                        "minLength": 0,
                                                        "maxLength": 3,
                                                        "description": "The 3 digit ISO country code."
                                                    },
                                                    "address_zip1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    },
                                                    "address_zip2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "total_results_count": {
                                    "type": "number",
                                    "description": "total number of bank accounts available with matching criteria",
                                    "example": "100"
                                },
                                "has_more_results": {
                                    "type": "string",
                                    "description": "is true if there are more results or pages",
                                    "example": "true"
                                },
                                "query_id": {
                                    "type": "string",
                                    "description": "used for retreiving previous and next pages",
                                    "example": "10"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankAccounts/{ID_ACCOUNT}": {
            "get": {
                "tags": [
                    "Bank Account"
                ],
                "summary": "Retrieve Bank Account Details",
                "description": "This API is used to retrieve details of particular bank account associated with a customer.",
                "operationId": "getBankAccount",
                "parameters": [
                    {
                        "name": "ID_ACCOUNT",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Bank/Card/Customer instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Retrieve Funding Account Details API is populated with Bank Account details.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "account_number",
                                "currency_code3d"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "aba_routing_number": {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 9,
                                    "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                    "example": "031201360"
                                },
                                "account_issuing_institution_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "TD BANK, NA"
                                },
                                "account_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "savings",
                                        "checking",
                                        "money_market"
                                    ],
                                    "description": "Account Sub Type indicates the sub type of a funding account.",
                                    "example": "savings"
                                },
                                "account_holder_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Bank Account"
                ],
                "summary": "Update Bank Account",
                "description": "The Update Customer API is used to update the Bank Account details. Only the information being updated needs to be sent in the request, along with the id of the bank account being updated.",
                "operationId": "updateBankAccount",
                "parameters": [
                    {
                        "name": "bankAccount",
                        "in": "body",
                        "description": "This JSON contains all the attributes of bank account to be updated.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "account_number",
                                "currency_code3d"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "aba_routing_number": {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 9,
                                    "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                    "example": "031201360"
                                },
                                "account_issuing_institution_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "TD BANK, NA"
                                },
                                "account_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "savings",
                                        "checking",
                                        "money_market"
                                    ],
                                    "description": "Account Sub Type indicates the sub type of a funding account.",
                                    "example": "savings"
                                },
                                "account_holder_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ID_ACCOUNT",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Bank/Card/Customer instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Update Bank Account API is populated with the updated Bank Account Details as bank account object.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "account_number",
                                "currency_code3d"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                                },
                                "aba_routing_number": {
                                    "type": "string",
                                    "minLength": 0,
                                    "maxLength": 9,
                                    "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                    "example": "031201360"
                                },
                                "account_issuing_institution_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "TD BANK, NA"
                                },
                                "account_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "savings",
                                        "checking",
                                        "money_market"
                                    ],
                                    "description": "Account Sub Type indicates the sub type of a funding account.",
                                    "example": "savings"
                                },
                                "account_holder_name": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bank Account"
                ],
                "summary": "Delete Bank Account",
                "description": "The Delete bank Account API is used to delete the bank account of a customer. All pending payments made with that account are cancelled upon deletion of the funding account.",
                "operationId": "deleteBankAccount",
                "parameters": [
                    {
                        "name": "ID_ACCOUNT",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Bank/Card/Customer instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Delete Bnak Account API is populated with the boolean value true/false wrapped as DeleteBankAccount_Response object.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the Bank."
                                },
                                "isDeleted": {
                                    "type": "boolean",
                                    "description": "Boolean value true/false determines bank is deleted or not."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{ID_CUSTOMER}/cards/retrieve": {
            "post": {
                "tags": [
                    "Card"
                ],
                "summary": "Retrieve Customer's Cards",
                "description": "This API is used to retrieve a list of Card accounts associated with a customer. The number of cards retrieved can be modified using the initial_records request parameter.  The ID_CUSTOMER  is issued by OrbiPay-Wallet .",
                "operationId": "retrieveCards",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "initial_records",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "initial count of records to be retrieved, for example 10"
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Retrieve Customer's Cards API is populated with the list cards of associarted with a customer.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "funding_account_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "currency_code3d",
                                            "card_number"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "card_number": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{3,32}$",
                                                "minLength": 3,
                                                "maxLength": 32,
                                                "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                                "example": "4124939999999990"
                                            },
                                            "currency_code3d": {
                                                "type": "string",
                                                "pattern": "^[A-Za-z]{3}$",
                                                "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                                "example": "USD"
                                            },
                                            "account_subtype": {
                                                "type": "string",
                                                "enum": [
                                                    "visa_credit",
                                                    "mastercard_credit",
                                                    "american_express_credit",
                                                    "discover_credit",
                                                    "visa_debit",
                                                    "mastercard_debit",
                                                    "discover_debit"
                                                ],
                                                "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                                "example": "visa_credit"
                                            },
                                            "expiry_date": {
                                                "type": "string",
                                                "pattern": "^[0-9/]{5,7}$",
                                                "minLength": 5,
                                                "maxLength": 7,
                                                "description": "Expiry date of the account is of format mm/yy",
                                                "example": "11/29"
                                            },
                                            "card_cvv_number": {
                                                "type": "string",
                                                "pattern": "^[0-9]{3,4}$",
                                                "minLength": 3,
                                                "maxLength": 4,
                                                "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                                "example": "123"
                                            },
                                            "name_on_card": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "example": "Will Smith"
                                            },
                                            "address": {
                                                "type": "object",
                                                "required": [
                                                    "address_line1",
                                                    "address_city",
                                                    "address_state",
                                                    "address_country",
                                                    "address_zip1"
                                                ],
                                                "properties": {
                                                    "address_line1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_line2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_city": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_state": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_country": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,3}",
                                                        "minLength": 0,
                                                        "maxLength": 3,
                                                        "description": "The 3 digit ISO country code."
                                                    },
                                                    "address_zip1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    },
                                                    "address_zip2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "total_results_count": {
                                    "type": "number",
                                    "description": "total number of cards available with matching criteria",
                                    "example": "100"
                                },
                                "has_more_results": {
                                    "type": "string",
                                    "description": "is true if there are more results or pages",
                                    "example": "true"
                                },
                                "query_id": {
                                    "type": "string",
                                    "description": "used for retreiving previous and next pages",
                                    "example": "10"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Card"
                ],
                "summary": "Get Customer's Cards Page",
                "description": "This API is used to retrieve and display customer cards information with pagination.",
                "operationId": "Get Cards",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "query id of the result in the context, for example 15"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "starting id of the result in the context, for example 11"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "starting id of the result in the context, for example 20"
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Get Customer's card page API is populated with the list cards of a customer for the query.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "funding_account_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "currency_code3d",
                                            "card_number"
                                        ],
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "card_number": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{3,32}$",
                                                "minLength": 3,
                                                "maxLength": 32,
                                                "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                                "example": "4124939999999990"
                                            },
                                            "currency_code3d": {
                                                "type": "string",
                                                "pattern": "^[A-Za-z]{3}$",
                                                "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                                "example": "USD"
                                            },
                                            "account_subtype": {
                                                "type": "string",
                                                "enum": [
                                                    "visa_credit",
                                                    "mastercard_credit",
                                                    "american_express_credit",
                                                    "discover_credit",
                                                    "visa_debit",
                                                    "mastercard_debit",
                                                    "discover_debit"
                                                ],
                                                "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                                "example": "visa_credit"
                                            },
                                            "expiry_date": {
                                                "type": "string",
                                                "pattern": "^[0-9/]{5,7}$",
                                                "minLength": 5,
                                                "maxLength": 7,
                                                "description": "Expiry date of the account is of format mm/yy",
                                                "example": "11/29"
                                            },
                                            "card_cvv_number": {
                                                "type": "string",
                                                "pattern": "^[0-9]{3,4}$",
                                                "minLength": 3,
                                                "maxLength": 4,
                                                "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                                "example": "123"
                                            },
                                            "name_on_card": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "example": "Will Smith"
                                            },
                                            "address": {
                                                "type": "object",
                                                "required": [
                                                    "address_line1",
                                                    "address_city",
                                                    "address_state",
                                                    "address_country",
                                                    "address_zip1"
                                                ],
                                                "properties": {
                                                    "address_line1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_line2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,50}",
                                                        "minLength": 0,
                                                        "maxLength": 50
                                                    },
                                                    "address_city": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_state": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,20}",
                                                        "minLength": 0,
                                                        "maxLength": 20
                                                    },
                                                    "address_country": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,3}",
                                                        "minLength": 0,
                                                        "maxLength": 3,
                                                        "description": "The 3 digit ISO country code."
                                                    },
                                                    "address_zip1": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    },
                                                    "address_zip2": {
                                                        "type": "string",
                                                        "pattern": "[a-z0-9]{0,10}",
                                                        "minLength": 0,
                                                        "maxLength": 10
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "total_results_count": {
                                    "type": "number",
                                    "description": "total number of cards available with matching criteria",
                                    "example": "100"
                                },
                                "has_more_results": {
                                    "type": "string",
                                    "description": "is true if there are more results or pages",
                                    "example": "true"
                                },
                                "query_id": {
                                    "type": "string",
                                    "description": "used for retreiving previous and next pages",
                                    "example": "10"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cards/{ID_ACCOUNT}": {
            "get": {
                "tags": [
                    "Card"
                ],
                "summary": "Retrieve Card Details",
                "description": "This API is used to retrieve details of particular card associated with a customer. The ID_ACCOUNT is issue by the OrbiPay-Wallet while adding the card.",
                "operationId": "getCard",
                "parameters": [
                    {
                        "name": "ID_ACCOUNT",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Bank/Card/Customer instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Retrieve Card Details API is populated with a card Account details.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "currency_code3d",
                                "card_number"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "card_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "visa_credit",
                                        "mastercard_credit",
                                        "american_express_credit",
                                        "discover_credit",
                                        "visa_debit",
                                        "mastercard_debit",
                                        "discover_debit"
                                    ],
                                    "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                    "example": "visa_credit"
                                },
                                "expiry_date": {
                                    "type": "string",
                                    "pattern": "^[0-9/]{5,7}$",
                                    "minLength": 5,
                                    "maxLength": 7,
                                    "description": "Expiry date of the account is of format mm/yy",
                                    "example": "11/29"
                                },
                                "card_cvv_number": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3,4}$",
                                    "minLength": 3,
                                    "maxLength": 4,
                                    "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                    "example": "123"
                                },
                                "name_on_card": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Card"
                ],
                "summary": "Update Card",
                "description": "The Update card API is used update card details.",
                "operationId": "updateCard",
                "parameters": [
                    {
                        "name": "card",
                        "in": "body",
                        "description": "This JSON contains all the attributes of cards to be updated.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "currency_code3d",
                                "card_number"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "card_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "visa_credit",
                                        "mastercard_credit",
                                        "american_express_credit",
                                        "discover_credit",
                                        "visa_debit",
                                        "mastercard_debit",
                                        "discover_debit"
                                    ],
                                    "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                    "example": "visa_credit"
                                },
                                "expiry_date": {
                                    "type": "string",
                                    "pattern": "^[0-9/]{5,7}$",
                                    "minLength": 5,
                                    "maxLength": 7,
                                    "description": "Expiry date of the account is of format mm/yy",
                                    "example": "11/29"
                                },
                                "card_cvv_number": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3,4}$",
                                    "minLength": 3,
                                    "maxLength": 4,
                                    "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                    "example": "123"
                                },
                                "name_on_card": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "ID_ACCOUNT",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Bank/Card/Customer instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Update Card API response is populated with the updated card details.",
                        "schema": {
                            "type": "object",
                            "required": [
                                "currency_code3d",
                                "card_number"
                            ],
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "card_number": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                                    "minLength": 3,
                                    "maxLength": 32,
                                    "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                    "example": "4124939999999990"
                                },
                                "currency_code3d": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                    "example": "USD"
                                },
                                "account_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "visa_credit",
                                        "mastercard_credit",
                                        "american_express_credit",
                                        "discover_credit",
                                        "visa_debit",
                                        "mastercard_debit",
                                        "discover_debit"
                                    ],
                                    "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                    "example": "visa_credit"
                                },
                                "expiry_date": {
                                    "type": "string",
                                    "pattern": "^[0-9/]{5,7}$",
                                    "minLength": 5,
                                    "maxLength": 7,
                                    "description": "Expiry date of the account is of format mm/yy",
                                    "example": "11/29"
                                },
                                "card_cvv_number": {
                                    "type": "string",
                                    "pattern": "^[0-9]{3,4}$",
                                    "minLength": 3,
                                    "maxLength": 4,
                                    "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                    "example": "123"
                                },
                                "name_on_card": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "example": "Will Smith"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "address_line1",
                                        "address_city",
                                        "address_state",
                                        "address_country",
                                        "address_zip1"
                                    ],
                                    "properties": {
                                        "address_line1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_line2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,50}",
                                            "minLength": 0,
                                            "maxLength": 50
                                        },
                                        "address_city": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_state": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,20}",
                                            "minLength": 0,
                                            "maxLength": 20
                                        },
                                        "address_country": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,3}",
                                            "minLength": 0,
                                            "maxLength": 3,
                                            "description": "The 3 digit ISO country code."
                                        },
                                        "address_zip1": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        },
                                        "address_zip2": {
                                            "type": "string",
                                            "pattern": "[a-z0-9]{0,10}",
                                            "minLength": 0,
                                            "maxLength": 10
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Card"
                ],
                "summary": "Delete Card",
                "description": "The Delete Card API is used to delete the card of a customer.",
                "operationId": "deleteCard",
                "parameters": [
                    {
                        "name": "ID_ACCOUNT",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Bank/Card/Customer instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Delete Card API is populated with the boolean value and deleted card id wrapped in DeleteCard_Response.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Unique ID assigned by the Orbipay Wallet to the card."
                                },
                                "isDeleted": {
                                    "type": "boolean",
                                    "description": "Boolean value true/false determines card is deleted or not."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transfers": {
            "post": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Transfer money",
                "description": "The Transfer money API is used to transfer money between wallet to  wallet or non-wallet.",
                "operationId": "transferMoney",
                "parameters": [
                    {
                        "name": "transfer",
                        "in": "body",
                        "description": "This JSON contains all the attributes of transfer to be made.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the Transfer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "transfer_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "transfer_type": {
                                    "type": "string",
                                    "enum": [
                                        "w2w",
                                        "w2nw"
                                    ],
                                    "description": "w2w: wallet to wallet w2nw: wallet to non-wallet",
                                    "example": "w2w"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "receiver_email_id": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay wallet."
                                },
                                "receiver_phone_number": {
                                    "description": "Phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "transfer_to_option": {
                                    "type": "string",
                                    "enum": [
                                        "email",
                                        "phone",
                                        "all"
                                    ],
                                    "description": "email: reference link will be sent to reciever's email or phone.",
                                    "example": "phone"
                                },
                                "transfer_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Transfer Money API is populated as Transfer object with the  Identifiers issued by  OrbiPay-Wallet  for the Transfer.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the Transfer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "transfer_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "transfer_type": {
                                    "type": "string",
                                    "enum": [
                                        "w2w",
                                        "w2nw"
                                    ],
                                    "description": "w2w: wallet to wallet w2nw: wallet to non-wallet",
                                    "example": "w2w"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "receiver_email_id": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay wallet."
                                },
                                "receiver_phone_number": {
                                    "description": "Phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "transfer_to_option": {
                                    "type": "string",
                                    "enum": [
                                        "email",
                                        "phone",
                                        "all"
                                    ],
                                    "description": "email: reference link will be sent to reciever's email or phone.",
                                    "example": "phone"
                                },
                                "transfer_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transfers/{ID_TRANSFER}": {
            "get": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Retrieve Transfer Details",
                "description": "This API is used to retrieve details of particular transfer associated  with a customer.",
                "operationId": "getTransferDetails",
                "parameters": [
                    {
                        "name": "ID_TRANSFER",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Transfer instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Retrieve Card Details API is populated with a Transfer Object.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the Transfer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "transfer_date": {
                                    "description": "Wallet creation date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "transfer_type": {
                                    "type": "string",
                                    "enum": [
                                        "w2w",
                                        "w2nw"
                                    ],
                                    "description": "w2w: wallet to wallet w2nw: wallet to non-wallet",
                                    "example": "w2w"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "receiver_email_id": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay wallet."
                                },
                                "receiver_phone_number": {
                                    "description": "Phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "transfer_to_option": {
                                    "type": "string",
                                    "enum": [
                                        "email",
                                        "phone",
                                        "all"
                                    ],
                                    "description": "email: reference link will be sent to reciever's email or phone.",
                                    "example": "phone"
                                },
                                "transfer_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cashin": {
            "post": {
                "tags": [
                    "CashIn"
                ],
                "summary": "Cash In",
                "description": "The Cash In API is used to top-up the wallet of a cusotmer.",
                "operationId": "CashIn",
                "parameters": [
                    {
                        "name": "CashIn",
                        "in": "body",
                        "description": "This JSON contains all the attributes of CashIn to be top up to the wallet.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet .",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "card_reference_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "cash_in_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Cash In API is populated as CashIn object with the Identifiers issued by OrbiPay-Wallet  for the CashIn.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the account in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet .",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "card_reference_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "cash_in_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cashout": {
            "post": {
                "tags": [
                    "CashOut"
                ],
                "summary": "Cash Out",
                "description": "The Cash Out API is used to unload money from the wallet to a bank account.",
                "operationId": "cashOut",
                "parameters": [
                    {
                        "name": "cashout",
                        "in": "body",
                        "description": "This JSON contains all the attributes of CashOut to be made.",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the CashOut in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "bank_account_reference_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "cash_out_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to CashOut API is populated as CashOut object with the Identifiers issued by OrbiPay-Wallet  for the cashout.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the CashOut in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "bank_account_reference_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "cash_out_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customers/{ID_CUSTOMER}/transactions/retrieve": {
            "post": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Retrieve Customer's Transaction",
                "description": "This API is used to retrieve a list of transactions associated with a customer. The number of transactions retrieved can be modified using the initial_records request parameter. The ID_CUSTOMER  is issued by OrbiPay-Wallet.",
                "operationId": "retrieveTransactions",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "initial_records",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "initial count of records to be retrieved, for example 10"
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Retrieve transactions API is populated with the list of transactions of a customer.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "transaction_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the Transaction in OrbiPay-Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "transaction_type": {
                                                "type": "string",
                                                "enum": [
                                                    "cashIn",
                                                    "cashOut",
                                                    "transfer"
                                                ],
                                                "description": "cashIn: load money in to the wallet cashIn. CashOut: unload money from the wallet. wallet transfer: tranfer money from wallet to wallet or non-wallet",
                                                "example": "transfer"
                                            },
                                            "transaction_subtype": {
                                                "type": "string",
                                                "enum": [
                                                    "w2w",
                                                    "w2nw"
                                                ],
                                                "description": "w2w: wallet to wallet transfer w2nw: wallet to non-wallet transfer",
                                                "example": "w2w"
                                            },
                                            "transaction_date": {
                                                "description": "transaction date",
                                                "allOf": [
                                                    {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "ISO8601 full-date format, YYYY-MM-DD"
                                                    }
                                                ]
                                            },
                                            "card_reference_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "bank_account_reference_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "amount": {
                                                "description": "The current balance of the wallet",
                                                "allOf": [
                                                    {
                                                        "type": "string",
                                                        "example": 101.05,
                                                        "description": "All numeric with last 2 digits as decimal."
                                                    }
                                                ]
                                            },
                                            "currency": {
                                                "type": "string",
                                                "pattern": "^[A-Za-z]{3}$",
                                                "description": "The currency - should be ISO_4217 format.",
                                                "example": "USD"
                                            },
                                            "customer_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "receiver_customer_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "receiver_name": {
                                                "type": "string",
                                                "pattern": "[a-z0-9]{0,50}",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                                            },
                                            "receiver_email_id": {
                                                "type": "string",
                                                "format": "email",
                                                "description": "This field contains the customer’s email address within the OrbiPay Wallet."
                                            },
                                            "receiver_phone_number": {
                                                "description": "phone number of the customer",
                                                "allOf": [
                                                    {
                                                        "type": "string",
                                                        "minLength": 4,
                                                        "maxLength": 20,
                                                        "example": "(908) 791-2916"
                                                    }
                                                ]
                                            },
                                            "transfer_to_option": {
                                                "type": "string",
                                                "enum": [
                                                    "email",
                                                    "phone",
                                                    "all"
                                                ],
                                                "description": "email: reference link will be sent to reciever's email or phone",
                                                "example": "phone"
                                            },
                                            "transfer_status": {
                                                "type": "string",
                                                "enum": [
                                                    "initiated",
                                                    "failed",
                                                    "pending",
                                                    "success"
                                                ],
                                                "example": "initiated"
                                            }
                                        }
                                    }
                                },
                                "total_results_count": {
                                    "type": "number",
                                    "description": "total number of Transactions available with matching criteria",
                                    "example": "100"
                                },
                                "has_more_results": {
                                    "type": "string",
                                    "description": "is true if there are more results or pages",
                                    "example": "true"
                                },
                                "query_id": {
                                    "type": "string",
                                    "description": "used for retreiving previous and next pages",
                                    "example": "10"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Customer's Transaction Page",
                "description": "This API is used to retrieve list of Transactions with pagination.",
                "operationId": "getTransactions",
                "parameters": [
                    {
                        "name": "ID_CUSTOMER",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Id of the customer instance issued by orbipay wallet."
                    },
                    {
                        "name": "query_id",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "query id of the result in the context, for example 15"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "starting id of the result in the context, for example 11"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "type": "string",
                        "pattern": "^[0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "starting id of the result in the context, for example 20"
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Get Transactions API is populated with the list Tarnsactions of a customer for the query.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "transaction_list": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the Transaction in OrbiPay-Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "transaction_type": {
                                                "type": "string",
                                                "enum": [
                                                    "cashIn",
                                                    "cashOut",
                                                    "transfer"
                                                ],
                                                "description": "cashIn: load money in to the wallet cashIn. CashOut: unload money from the wallet. wallet transfer: tranfer money from wallet to wallet or non-wallet",
                                                "example": "transfer"
                                            },
                                            "transaction_subtype": {
                                                "type": "string",
                                                "enum": [
                                                    "w2w",
                                                    "w2nw"
                                                ],
                                                "description": "w2w: wallet to wallet transfer w2nw: wallet to non-wallet transfer",
                                                "example": "w2w"
                                            },
                                            "transaction_date": {
                                                "description": "transaction date",
                                                "allOf": [
                                                    {
                                                        "type": "string",
                                                        "format": "date",
                                                        "description": "ISO8601 full-date format, YYYY-MM-DD"
                                                    }
                                                ]
                                            },
                                            "card_reference_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "bank_account_reference_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "amount": {
                                                "description": "The current balance of the wallet",
                                                "allOf": [
                                                    {
                                                        "type": "string",
                                                        "example": 101.05,
                                                        "description": "All numeric with last 2 digits as decimal."
                                                    }
                                                ]
                                            },
                                            "currency": {
                                                "type": "string",
                                                "pattern": "^[A-Za-z]{3}$",
                                                "description": "The currency - should be ISO_4217 format.",
                                                "example": "USD"
                                            },
                                            "customer_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "receiver_customer_id": {
                                                "type": "string",
                                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                                "example": "act_exmaple5l595g5vm"
                                            },
                                            "receiver_name": {
                                                "type": "string",
                                                "pattern": "[a-z0-9]{0,50}",
                                                "minLength": 0,
                                                "maxLength": 50,
                                                "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                                            },
                                            "receiver_email_id": {
                                                "type": "string",
                                                "format": "email",
                                                "description": "This field contains the customer’s email address within the OrbiPay Wallet."
                                            },
                                            "receiver_phone_number": {
                                                "description": "phone number of the customer",
                                                "allOf": [
                                                    {
                                                        "type": "string",
                                                        "minLength": 4,
                                                        "maxLength": 20,
                                                        "example": "(908) 791-2916"
                                                    }
                                                ]
                                            },
                                            "transfer_to_option": {
                                                "type": "string",
                                                "enum": [
                                                    "email",
                                                    "phone",
                                                    "all"
                                                ],
                                                "description": "email: reference link will be sent to reciever's email or phone",
                                                "example": "phone"
                                            },
                                            "transfer_status": {
                                                "type": "string",
                                                "enum": [
                                                    "initiated",
                                                    "failed",
                                                    "pending",
                                                    "success"
                                                ],
                                                "example": "initiated"
                                            }
                                        }
                                    }
                                },
                                "total_results_count": {
                                    "type": "number",
                                    "description": "total number of Transactions available with matching criteria",
                                    "example": "100"
                                },
                                "has_more_results": {
                                    "type": "string",
                                    "description": "is true if there are more results or pages",
                                    "example": "true"
                                },
                                "query_id": {
                                    "type": "string",
                                    "description": "used for retreiving previous and next pages",
                                    "example": "10"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions/{ID_TRANSACTION}": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Retrieve Transaction Details",
                "description": "This API is used to retrieve details of particular Transactions associated with a customer.",
                "operationId": "getTransaction",
                "parameters": [
                    {
                        "name": "ID_TRANSACTION",
                        "in": "path",
                        "required": true,
                        "description": "Id of the Transactions instance issued by orbipay wallet.",
                        "type": "string",
                        "pattern": "[a-z0-9]{0,50}",
                        "minLength": 0,
                        "maxLength": 50
                    },
                    {
                        "name": "PARTNER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique partner Identifier, for example  cli_example5852kw555"
                    },
                    {
                        "name": "SIGNATURE_KEY",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,64}$",
                        "minLength": 0,
                        "maxLength": 64,
                        "description": "Signature key used for authentication  cli_example5852kw555"
                    },
                    {
                        "name": "CUSTOMER_ID",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "pattern": "^[a-zA-Z0-9]{0,50}$",
                        "minLength": 0,
                        "maxLength": 50,
                        "description": "Unique customer Identifier, for example  cus_example5852kw555"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response to Retrieve Transactions Details API is populated with a particular Transactins.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the Transaction in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "transaction_type": {
                                    "type": "string",
                                    "enum": [
                                        "cashIn",
                                        "cashOut",
                                        "transfer"
                                    ],
                                    "description": "cashIn: load money in to the wallet cashIn. CashOut: unload money from the wallet. wallet transfer: tranfer money from wallet to wallet or non-wallet",
                                    "example": "transfer"
                                },
                                "transaction_subtype": {
                                    "type": "string",
                                    "enum": [
                                        "w2w",
                                        "w2nw"
                                    ],
                                    "description": "w2w: wallet to wallet transfer w2nw: wallet to non-wallet transfer",
                                    "example": "w2w"
                                },
                                "transaction_date": {
                                    "description": "transaction date",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "format": "date",
                                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                                        }
                                    ]
                                },
                                "card_reference_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "bank_account_reference_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "amount": {
                                    "description": "The current balance of the wallet",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "example": 101.05,
                                            "description": "All numeric with last 2 digits as decimal."
                                        }
                                    ]
                                },
                                "currency": {
                                    "type": "string",
                                    "pattern": "^[A-Za-z]{3}$",
                                    "description": "The currency - should be ISO_4217 format.",
                                    "example": "USD"
                                },
                                "customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_customer_id": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                    "example": "act_exmaple5l595g5vm"
                                },
                                "receiver_name": {
                                    "type": "string",
                                    "pattern": "[a-z0-9]{0,50}",
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                                },
                                "receiver_email_id": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "This field contains the customer’s email address within the OrbiPay Wallet."
                                },
                                "receiver_phone_number": {
                                    "description": "phone number of the customer",
                                    "allOf": [
                                        {
                                            "type": "string",
                                            "minLength": 4,
                                            "maxLength": 20,
                                            "example": "(908) 791-2916"
                                        }
                                    ]
                                },
                                "transfer_to_option": {
                                    "type": "string",
                                    "enum": [
                                        "email",
                                        "phone",
                                        "all"
                                    ],
                                    "description": "email: reference link will be sent to reciever's email or phone",
                                    "example": "phone"
                                },
                                "transfer_status": {
                                    "type": "string",
                                    "enum": [
                                        "initiated",
                                        "failed",
                                        "pending",
                                        "success"
                                    ],
                                    "example": "initiated"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "The request was unacceptable, often due to missing a required parameter.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "Something went wrong at the Orbipay-Wallet Server",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "code",
                                            "message"
                                        ],
                                        "properties": {
                                            "code": {
                                                "type": "string",
                                                "example": "error_field"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "field": {
                                                "type": "string",
                                                "description": "Name of the invalid parameter."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "Header_Partner_Id": {
            "name": "PARTNER_ID",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{0,50}$",
            "minLength": 0,
            "maxLength": 50,
            "description": "Unique partner Identifier, for example  cli_example5852kw555"
        },
        "Header_Signature_Key": {
            "name": "SIGNATURE_KEY",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{0,64}$",
            "minLength": 0,
            "maxLength": 64,
            "description": "Signature key used for authentication  cli_example5852kw555"
        },
        "Header_Customer_Id": {
            "name": "CUSTOMER_ID",
            "in": "header",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{0,50}$",
            "minLength": 0,
            "maxLength": 50,
            "description": "Unique customer Identifier, for example  cus_example5852kw555"
        },
        "Path_IdOfCustomer": {
            "name": "ID_CUSTOMER",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-z0-9]{0,50}",
            "minLength": 0,
            "maxLength": 50,
            "description": "Id of the customer instance issued by orbipay wallet."
        },
        "Path_IdOfWallet": {
            "name": "ID_WALLET",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "[a-z0-9]{0,50}",
            "minLength": 0,
            "maxLength": 50,
            "description": "Id of the wallet instance issued by orbipay wallet."
        },
        "Path_IdOfAccount": {
            "name": "ID_ACCOUNT",
            "in": "path",
            "required": true,
            "description": "Id of the Bank/Card/Customer instance issued by orbipay wallet.",
            "type": "string",
            "pattern": "[a-z0-9]{0,50}",
            "minLength": 0,
            "maxLength": 50
        },
        "Path_IdOfTransfer": {
            "name": "ID_TRANSFER",
            "in": "path",
            "required": true,
            "description": "Id of the Transfer instance issued by orbipay wallet.",
            "type": "string",
            "pattern": "[a-z0-9]{0,50}",
            "minLength": 0,
            "maxLength": 50
        },
        "Path_IdOfTransaction": {
            "name": "ID_TRANSACTION",
            "in": "path",
            "required": true,
            "description": "Id of the Transactions instance issued by orbipay wallet.",
            "type": "string",
            "pattern": "[a-z0-9]{0,50}",
            "minLength": 0,
            "maxLength": 50
        },
        "Path_IdOfPayment": {
            "name": "ID_PAYMENT",
            "in": "path",
            "required": true,
            "description": "Id of the Payment instance,issued by orbipay wallet",
            "type": "string",
            "pattern": "[a-z0-9]{0,50}",
            "minLength": 0,
            "maxLength": 50
        },
        "Query_FromDate": {
            "name": "from_date",
            "type": "string",
            "format": "date",
            "in": "query"
        },
        "Query_ToDate": {
            "name": "to_date",
            "type": "string",
            "format": "date",
            "in": "query"
        },
        "Query_Limit": {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Using the limit parameter in the request would ensure that a maximum of only that many objects are returned"
        },
        "Query_Initial_Record": {
            "name": "initial_records",
            "in": "query",
            "type": "string",
            "pattern": "^[0-9]{0,50}$",
            "minLength": 0,
            "maxLength": 50,
            "description": "initial count of records to be retrieved, for example 10"
        },
        "Query_Query_Id": {
            "name": "query_id",
            "in": "query",
            "type": "string",
            "pattern": "^[0-9]{0,50}$",
            "minLength": 0,
            "maxLength": 50,
            "description": "query id of the result in the context, for example 15"
        },
        "Query_From": {
            "name": "from",
            "in": "query",
            "type": "string",
            "pattern": "^[0-9]{0,50}$",
            "minLength": 0,
            "maxLength": 50,
            "description": "starting id of the result in the context, for example 11"
        },
        "Query_To": {
            "name": "to",
            "in": "query",
            "type": "string",
            "pattern": "^[0-9]{0,50}$",
            "minLength": 0,
            "maxLength": 50,
            "description": "starting id of the result in the context, for example 20"
        }
    },
    "definitions": {
        "wallet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Unique ID assigned by the Orbipay Wallet."
                },
                "creation_date": {
                    "description": "Wallet creation date",
                    "allOf": [
                        {
                            "type": "string",
                            "format": "date",
                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                        }
                    ]
                },
                "balance": {
                    "description": "The current balance of the wallet",
                    "allOf": [
                        {
                            "type": "string",
                            "example": 101.05,
                            "description": "All numeric with last 2 digits as decimal."
                        }
                    ]
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{3}$",
                    "description": "The currency - should be ISO_4217 format.",
                    "example": "USD"
                },
                "customer_id": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                },
                "memo": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,200}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "descritption about the wallet."
                }
            }
        },
        "DeleteCard_Response": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Unique ID assigned by the Orbipay Wallet to the card."
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Boolean value true/false determines card is deleted or not."
                }
            }
        },
        "DeleteBankAccount_Response": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Unique ID assigned by the Orbipay Wallet to the Bank."
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Boolean value true/false determines bank is deleted or not."
                }
            }
        },
        "Error": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "error_field"
                },
                "message": {
                    "type": "string"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the invalid parameter."
                }
            }
        },
        "Address": {
            "type": "object",
            "required": [
                "address_line1",
                "address_city",
                "address_state",
                "address_country",
                "address_zip1"
            ],
            "properties": {
                "address_line1": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50
                },
                "address_line2": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50
                },
                "address_city": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,20}",
                    "minLength": 0,
                    "maxLength": 20
                },
                "address_state": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,20}",
                    "minLength": 0,
                    "maxLength": 20
                },
                "address_country": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,3}",
                    "minLength": 0,
                    "maxLength": 3,
                    "description": "The 3 digit ISO country code."
                },
                "address_zip1": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,10}",
                    "minLength": 0,
                    "maxLength": 10
                },
                "address_zip2": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,10}",
                    "minLength": 0,
                    "maxLength": 10
                }
            }
        },
        "RetrieveCustomerBankAccounts_Response": {
            "type": "object",
            "properties": {
                "funding_account_list": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "account_number",
                            "currency_code3d"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                "example": "act_exmaple5l595g5vm"
                            },
                            "customer_id": {
                                "type": "string",
                                "pattern": "[a-z0-9]{0,50}",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                            },
                            "aba_routing_number": {
                                "type": "string",
                                "minLength": 0,
                                "maxLength": 9,
                                "description": "ABA Routing Number is mandatory for Bank Accounts.",
                                "example": "031201360"
                            },
                            "account_issuing_institution_name": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9,]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "example": "TD BANK, NA"
                            },
                            "account_number": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9]{3,32}$",
                                "minLength": 3,
                                "maxLength": 32,
                                "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                "example": "4124939999999990"
                            },
                            "currency_code3d": {
                                "type": "string",
                                "pattern": "^[A-Za-z]{3}$",
                                "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                "example": "USD"
                            },
                            "account_subtype": {
                                "type": "string",
                                "enum": [
                                    "savings",
                                    "checking",
                                    "money_market"
                                ],
                                "description": "Account Sub Type indicates the sub type of a funding account.",
                                "example": "savings"
                            },
                            "account_holder_name": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "example": "Will Smith"
                            },
                            "address": {
                                "type": "object",
                                "required": [
                                    "address_line1",
                                    "address_city",
                                    "address_state",
                                    "address_country",
                                    "address_zip1"
                                ],
                                "properties": {
                                    "address_line1": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,50}",
                                        "minLength": 0,
                                        "maxLength": 50
                                    },
                                    "address_line2": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,50}",
                                        "minLength": 0,
                                        "maxLength": 50
                                    },
                                    "address_city": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,20}",
                                        "minLength": 0,
                                        "maxLength": 20
                                    },
                                    "address_state": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,20}",
                                        "minLength": 0,
                                        "maxLength": 20
                                    },
                                    "address_country": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,3}",
                                        "minLength": 0,
                                        "maxLength": 3,
                                        "description": "The 3 digit ISO country code."
                                    },
                                    "address_zip1": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,10}",
                                        "minLength": 0,
                                        "maxLength": 10
                                    },
                                    "address_zip2": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,10}",
                                        "minLength": 0,
                                        "maxLength": 10
                                    }
                                }
                            }
                        }
                    }
                },
                "total_results_count": {
                    "type": "number",
                    "description": "total number of bank accounts available with matching criteria",
                    "example": "100"
                },
                "has_more_results": {
                    "type": "string",
                    "description": "is true if there are more results or pages",
                    "example": "true"
                },
                "query_id": {
                    "type": "string",
                    "description": "used for retreiving previous and next pages",
                    "example": "10"
                }
            }
        },
        "RetrieveCustomerCards_Response": {
            "type": "object",
            "properties": {
                "funding_account_list": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "currency_code3d",
                            "card_number"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                                "example": "act_exmaple5l595g5vm"
                            },
                            "card_number": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9]{3,32}$",
                                "minLength": 3,
                                "maxLength": 32,
                                "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                                "example": "4124939999999990"
                            },
                            "currency_code3d": {
                                "type": "string",
                                "pattern": "^[A-Za-z]{3}$",
                                "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                                "example": "USD"
                            },
                            "account_subtype": {
                                "type": "string",
                                "enum": [
                                    "visa_credit",
                                    "mastercard_credit",
                                    "american_express_credit",
                                    "discover_credit",
                                    "visa_debit",
                                    "mastercard_debit",
                                    "discover_debit"
                                ],
                                "description": "'Account Sub Type indicates the sub type of a funding account.'",
                                "example": "visa_credit"
                            },
                            "expiry_date": {
                                "type": "string",
                                "pattern": "^[0-9/]{5,7}$",
                                "minLength": 5,
                                "maxLength": 7,
                                "description": "Expiry date of the account is of format mm/yy",
                                "example": "11/29"
                            },
                            "card_cvv_number": {
                                "type": "string",
                                "pattern": "^[0-9]{3,4}$",
                                "minLength": 3,
                                "maxLength": 4,
                                "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                                "example": "123"
                            },
                            "name_on_card": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "example": "Will Smith"
                            },
                            "address": {
                                "type": "object",
                                "required": [
                                    "address_line1",
                                    "address_city",
                                    "address_state",
                                    "address_country",
                                    "address_zip1"
                                ],
                                "properties": {
                                    "address_line1": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,50}",
                                        "minLength": 0,
                                        "maxLength": 50
                                    },
                                    "address_line2": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,50}",
                                        "minLength": 0,
                                        "maxLength": 50
                                    },
                                    "address_city": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,20}",
                                        "minLength": 0,
                                        "maxLength": 20
                                    },
                                    "address_state": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,20}",
                                        "minLength": 0,
                                        "maxLength": 20
                                    },
                                    "address_country": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,3}",
                                        "minLength": 0,
                                        "maxLength": 3,
                                        "description": "The 3 digit ISO country code."
                                    },
                                    "address_zip1": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,10}",
                                        "minLength": 0,
                                        "maxLength": 10
                                    },
                                    "address_zip2": {
                                        "type": "string",
                                        "pattern": "[a-z0-9]{0,10}",
                                        "minLength": 0,
                                        "maxLength": 10
                                    }
                                }
                            }
                        }
                    }
                },
                "total_results_count": {
                    "type": "number",
                    "description": "total number of cards available with matching criteria",
                    "example": "100"
                },
                "has_more_results": {
                    "type": "string",
                    "description": "is true if there are more results or pages",
                    "example": "true"
                },
                "query_id": {
                    "type": "string",
                    "description": "used for retreiving previous and next pages",
                    "example": "10"
                }
            }
        },
        "RetrieveCustomerTransactions_Response": {
            "type": "object",
            "properties": {
                "transaction_list": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Id is a unique identifier assigned to the Transaction in OrbiPay-Wallet.",
                                "example": "act_exmaple5l595g5vm"
                            },
                            "transaction_type": {
                                "type": "string",
                                "enum": [
                                    "cashIn",
                                    "cashOut",
                                    "transfer"
                                ],
                                "description": "cashIn: load money in to the wallet cashIn. CashOut: unload money from the wallet. wallet transfer: tranfer money from wallet to wallet or non-wallet",
                                "example": "transfer"
                            },
                            "transaction_subtype": {
                                "type": "string",
                                "enum": [
                                    "w2w",
                                    "w2nw"
                                ],
                                "description": "w2w: wallet to wallet transfer w2nw: wallet to non-wallet transfer",
                                "example": "w2w"
                            },
                            "transaction_date": {
                                "description": "transaction date",
                                "allOf": [
                                    {
                                        "type": "string",
                                        "format": "date",
                                        "description": "ISO8601 full-date format, YYYY-MM-DD"
                                    }
                                ]
                            },
                            "card_reference_id": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                                "example": "act_exmaple5l595g5vm"
                            },
                            "bank_account_reference_id": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                                "example": "act_exmaple5l595g5vm"
                            },
                            "amount": {
                                "description": "The current balance of the wallet",
                                "allOf": [
                                    {
                                        "type": "string",
                                        "example": 101.05,
                                        "description": "All numeric with last 2 digits as decimal."
                                    }
                                ]
                            },
                            "currency": {
                                "type": "string",
                                "pattern": "^[A-Za-z]{3}$",
                                "description": "The currency - should be ISO_4217 format.",
                                "example": "USD"
                            },
                            "customer_id": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                "example": "act_exmaple5l595g5vm"
                            },
                            "receiver_customer_id": {
                                "type": "string",
                                "pattern": "^[a-zA-Z0-9_]{0,50}$",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                                "example": "act_exmaple5l595g5vm"
                            },
                            "receiver_name": {
                                "type": "string",
                                "pattern": "[a-z0-9]{0,50}",
                                "minLength": 0,
                                "maxLength": 50,
                                "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                            },
                            "receiver_email_id": {
                                "type": "string",
                                "format": "email",
                                "description": "This field contains the customer’s email address within the OrbiPay Wallet."
                            },
                            "receiver_phone_number": {
                                "description": "phone number of the customer",
                                "allOf": [
                                    {
                                        "type": "string",
                                        "minLength": 4,
                                        "maxLength": 20,
                                        "example": "(908) 791-2916"
                                    }
                                ]
                            },
                            "transfer_to_option": {
                                "type": "string",
                                "enum": [
                                    "email",
                                    "phone",
                                    "all"
                                ],
                                "description": "email: reference link will be sent to reciever's email or phone",
                                "example": "phone"
                            },
                            "transfer_status": {
                                "type": "string",
                                "enum": [
                                    "initiated",
                                    "failed",
                                    "pending",
                                    "success"
                                ],
                                "example": "initiated"
                            }
                        }
                    }
                },
                "total_results_count": {
                    "type": "number",
                    "description": "total number of Transactions available with matching criteria",
                    "example": "100"
                },
                "has_more_results": {
                    "type": "string",
                    "description": "is true if there are more results or pages",
                    "example": "true"
                },
                "query_id": {
                    "type": "string",
                    "description": "used for retreiving previous and next pages",
                    "example": "10"
                }
            }
        },
        "customer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                },
                "first_name": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": " This field contains account holder’s first name and will be sent on all types of detail records."
                },
                "last_name": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "This field contains the account holder’s last name, and will appear on all types of detail records."
                },
                "middle_name": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "This field contains the account holder’s middle initial and will appear on all types of detail records."
                },
                "date_of_birth": {
                    "description": "Date of Birth.  ISO8601 full-date format, YYYY-MM-DD",
                    "allOf": [
                        {
                            "type": "string",
                            "format": "date",
                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                        }
                    ]
                },
                "government_issued_id": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Provide SSN in case of Customers from US."
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "This field contains the customer’s email address within the OrbiPay  walllet."
                },
                "phone_number": {
                    "description": "Home phone number of the customer",
                    "allOf": [
                        {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 20,
                            "example": "(908) 791-2916"
                        }
                    ]
                },
                "social_account_id": {
                    "type": "string",
                    "description": "id provided by the social networking sites."
                },
                "register_login_id": {
                    "type": "string",
                    "description": "Email or phone number used for login."
                },
                "address": {
                    "type": "object",
                    "required": [
                        "address_line1",
                        "address_city",
                        "address_state",
                        "address_country",
                        "address_zip1"
                    ],
                    "properties": {
                        "address_line1": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,50}",
                            "minLength": 0,
                            "maxLength": 50
                        },
                        "address_line2": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,50}",
                            "minLength": 0,
                            "maxLength": 50
                        },
                        "address_city": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,20}",
                            "minLength": 0,
                            "maxLength": 20
                        },
                        "address_state": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,20}",
                            "minLength": 0,
                            "maxLength": 20
                        },
                        "address_country": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,3}",
                            "minLength": 0,
                            "maxLength": 3,
                            "description": "The 3 digit ISO country code."
                        },
                        "address_zip1": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,10}",
                            "minLength": 0,
                            "maxLength": 10
                        },
                        "address_zip2": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,10}",
                            "minLength": 0,
                            "maxLength": 10
                        }
                    }
                }
            }
        },
        "Card": {
            "type": "object",
            "required": [
                "currency_code3d",
                "card_number"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "card_number": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                    "minLength": 3,
                    "maxLength": 32,
                    "description": "card Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                    "example": "4124939999999990"
                },
                "currency_code3d": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{3}$",
                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                    "example": "USD"
                },
                "account_subtype": {
                    "type": "string",
                    "enum": [
                        "visa_credit",
                        "mastercard_credit",
                        "american_express_credit",
                        "discover_credit",
                        "visa_debit",
                        "mastercard_debit",
                        "discover_debit"
                    ],
                    "description": "'Account Sub Type indicates the sub type of a funding account.'",
                    "example": "visa_credit"
                },
                "expiry_date": {
                    "type": "string",
                    "pattern": "^[0-9/]{5,7}$",
                    "minLength": 5,
                    "maxLength": 7,
                    "description": "Expiry date of the account is of format mm/yy",
                    "example": "11/29"
                },
                "card_cvv_number": {
                    "type": "string",
                    "pattern": "^[0-9]{3,4}$",
                    "minLength": 3,
                    "maxLength": 4,
                    "description": "Card CVV/CVV2 number is conditional and needs to be passed when adding or editing a Card as a funding account.",
                    "example": "123"
                },
                "name_on_card": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "example": "Will Smith"
                },
                "address": {
                    "type": "object",
                    "required": [
                        "address_line1",
                        "address_city",
                        "address_state",
                        "address_country",
                        "address_zip1"
                    ],
                    "properties": {
                        "address_line1": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,50}",
                            "minLength": 0,
                            "maxLength": 50
                        },
                        "address_line2": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,50}",
                            "minLength": 0,
                            "maxLength": 50
                        },
                        "address_city": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,20}",
                            "minLength": 0,
                            "maxLength": 20
                        },
                        "address_state": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,20}",
                            "minLength": 0,
                            "maxLength": 20
                        },
                        "address_country": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,3}",
                            "minLength": 0,
                            "maxLength": 3,
                            "description": "The 3 digit ISO country code."
                        },
                        "address_zip1": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,10}",
                            "minLength": 0,
                            "maxLength": 10
                        },
                        "address_zip2": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,10}",
                            "minLength": 0,
                            "maxLength": 10
                        }
                    }
                }
            }
        },
        "Bank_Account": {
            "type": "object",
            "required": [
                "account_number",
                "currency_code3d"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the account in OrbiPay-wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "customer_id": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Unique ID assigned by the Orbipay Wallet to the customer."
                },
                "aba_routing_number": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 9,
                    "description": "ABA Routing Number is mandatory for Bank Accounts.",
                    "example": "031201360"
                },
                "account_issuing_institution_name": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9,]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "example": "TD BANK, NA"
                },
                "account_number": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9]{3,32}$",
                    "minLength": 3,
                    "maxLength": 32,
                    "description": "Account Number field is expected to be a unique field for the accounts in OrbiPay-Wallet.",
                    "example": "4124939999999990"
                },
                "currency_code3d": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{3}$",
                    "description": "3 character ISO currency code should be provided in currencyCode3d field default to USD.",
                    "example": "USD"
                },
                "account_subtype": {
                    "type": "string",
                    "enum": [
                        "savings",
                        "checking",
                        "money_market"
                    ],
                    "description": "Account Sub Type indicates the sub type of a funding account.",
                    "example": "savings"
                },
                "account_holder_name": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "example": "Will Smith"
                },
                "address": {
                    "type": "object",
                    "required": [
                        "address_line1",
                        "address_city",
                        "address_state",
                        "address_country",
                        "address_zip1"
                    ],
                    "properties": {
                        "address_line1": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,50}",
                            "minLength": 0,
                            "maxLength": 50
                        },
                        "address_line2": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,50}",
                            "minLength": 0,
                            "maxLength": 50
                        },
                        "address_city": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,20}",
                            "minLength": 0,
                            "maxLength": 20
                        },
                        "address_state": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,20}",
                            "minLength": 0,
                            "maxLength": 20
                        },
                        "address_country": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,3}",
                            "minLength": 0,
                            "maxLength": 3,
                            "description": "The 3 digit ISO country code."
                        },
                        "address_zip1": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,10}",
                            "minLength": 0,
                            "maxLength": 10
                        },
                        "address_zip2": {
                            "type": "string",
                            "pattern": "[a-z0-9]{0,10}",
                            "minLength": 0,
                            "maxLength": 10
                        }
                    }
                }
            }
        },
        "CashIn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the account in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "customer_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet .",
                    "example": "act_exmaple5l595g5vm"
                },
                "amount": {
                    "description": "The current balance of the wallet",
                    "allOf": [
                        {
                            "type": "string",
                            "example": 101.05,
                            "description": "All numeric with last 2 digits as decimal."
                        }
                    ]
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{3}$",
                    "description": "The currency - should be ISO_4217 format.",
                    "example": "USD"
                },
                "card_reference_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "cash_in_status": {
                    "type": "string",
                    "enum": [
                        "initiated",
                        "failed",
                        "pending",
                        "success"
                    ],
                    "example": "initiated"
                }
            }
        },
        "CashOut": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the CashOut in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "customer_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "amount": {
                    "description": "The current balance of the wallet",
                    "allOf": [
                        {
                            "type": "string",
                            "example": 101.05,
                            "description": "All numeric with last 2 digits as decimal."
                        }
                    ]
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{3}$",
                    "description": "The currency - should be ISO_4217 format.",
                    "example": "USD"
                },
                "bank_account_reference_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "cash_out_status": {
                    "type": "string",
                    "enum": [
                        "initiated",
                        "failed",
                        "pending",
                        "success"
                    ],
                    "example": "initiated"
                }
            }
        },
        "Transfer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the Transfer in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "transfer_date": {
                    "description": "Wallet creation date",
                    "allOf": [
                        {
                            "type": "string",
                            "format": "date",
                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                        }
                    ]
                },
                "transfer_type": {
                    "type": "string",
                    "enum": [
                        "w2w",
                        "w2nw"
                    ],
                    "description": "w2w: wallet to wallet w2nw: wallet to non-wallet",
                    "example": "w2w"
                },
                "amount": {
                    "description": "The current balance of the wallet",
                    "allOf": [
                        {
                            "type": "string",
                            "example": 101.05,
                            "description": "All numeric with last 2 digits as decimal."
                        }
                    ]
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{3}$",
                    "description": "The currency - should be ISO_4217 format.",
                    "example": "USD"
                },
                "customer_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "receiver_customer_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "receiver_name": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                },
                "receiver_email_id": {
                    "type": "string",
                    "format": "email",
                    "description": "This field contains the customer’s email address within the OrbiPay wallet."
                },
                "receiver_phone_number": {
                    "description": "Phone number of the customer",
                    "allOf": [
                        {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 20,
                            "example": "(908) 791-2916"
                        }
                    ]
                },
                "transfer_to_option": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone",
                        "all"
                    ],
                    "description": "email: reference link will be sent to reciever's email or phone.",
                    "example": "phone"
                },
                "transfer_status": {
                    "type": "string",
                    "enum": [
                        "initiated",
                        "failed",
                        "pending",
                        "success"
                    ],
                    "example": "initiated"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the Transaction in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "transaction_type": {
                    "type": "string",
                    "enum": [
                        "cashIn",
                        "cashOut",
                        "transfer"
                    ],
                    "description": "cashIn: load money in to the wallet cashIn. CashOut: unload money from the wallet. wallet transfer: tranfer money from wallet to wallet or non-wallet",
                    "example": "transfer"
                },
                "transaction_subtype": {
                    "type": "string",
                    "enum": [
                        "w2w",
                        "w2nw"
                    ],
                    "description": "w2w: wallet to wallet transfer w2nw: wallet to non-wallet transfer",
                    "example": "w2w"
                },
                "transaction_date": {
                    "description": "transaction date",
                    "allOf": [
                        {
                            "type": "string",
                            "format": "date",
                            "description": "ISO8601 full-date format, YYYY-MM-DD"
                        }
                    ]
                },
                "card_reference_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the card by Orbipay Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "bank_account_reference_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the bank by Orbipay Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "amount": {
                    "description": "The current balance of the wallet",
                    "allOf": [
                        {
                            "type": "string",
                            "example": 101.05,
                            "description": "All numeric with last 2 digits as decimal."
                        }
                    ]
                },
                "currency": {
                    "type": "string",
                    "pattern": "^[A-Za-z]{3}$",
                    "description": "The currency - should be ISO_4217 format.",
                    "example": "USD"
                },
                "customer_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "receiver_customer_id": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9_]{0,50}$",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "Id is a unique identifier assigned to the customer in OrbiPay-Wallet.",
                    "example": "act_exmaple5l595g5vm"
                },
                "receiver_name": {
                    "type": "string",
                    "pattern": "[a-z0-9]{0,50}",
                    "minLength": 0,
                    "maxLength": 50,
                    "description": "This field contains account holder’s first name and will be sent on all types of detail records."
                },
                "receiver_email_id": {
                    "type": "string",
                    "format": "email",
                    "description": "This field contains the customer’s email address within the OrbiPay Wallet."
                },
                "receiver_phone_number": {
                    "description": "phone number of the customer",
                    "allOf": [
                        {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 20,
                            "example": "(908) 791-2916"
                        }
                    ]
                },
                "transfer_to_option": {
                    "type": "string",
                    "enum": [
                        "email",
                        "phone",
                        "all"
                    ],
                    "description": "email: reference link will be sent to reciever's email or phone",
                    "example": "phone"
                },
                "transfer_status": {
                    "type": "string",
                    "enum": [
                        "initiated",
                        "failed",
                        "pending",
                        "success"
                    ],
                    "example": "initiated"
                }
            }
        },
        "Errors_Response": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "code",
                            "message"
                        ],
                        "properties": {
                            "code": {
                                "type": "string",
                                "example": "error_field"
                            },
                            "message": {
                                "type": "string"
                            },
                            "field": {
                                "type": "string",
                                "description": "Name of the invalid parameter."
                            }
                        }
                    }
                }
            }
        },
        "Field_Type_Date": {
            "type": "string",
            "format": "date",
            "description": "ISO8601 full-date format, YYYY-MM-DD"
        },
        "Field_Type_Amount": {
            "type": "string",
            "example": 101.05,
            "description": "All numeric with last 2 digits as decimal."
        },
        "Field_Type_Phone": {
            "type": "string",
            "minLength": 4,
            "maxLength": 20,
            "example": "(908) 791-2916"
        }
    },
    "responses": {
        "Default_Response": {
            "description": "unexpected error",
            "schema": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "example": "error_field"
                    },
                    "message": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the invalid parameter."
                    }
                }
            }
        },
        "Response_401": {
            "description": "Unauthorized"
        },
        "Response_404": {
            "description": "The requested resource doesn't exist."
        },
        "Response_500": {
            "description": "Something went wrong at the Orbipay-Wallet Server",
            "schema": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        },
        "Response_BadRequest": {
            "description": "The request was unacceptable, often due to missing a required parameter.",
            "schema": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "required": [
                                "code",
                                "message"
                            ],
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "example": "error_field"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "field": {
                                    "type": "string",
                                    "description": "Name of the invalid parameter."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}