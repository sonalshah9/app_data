{
    "project": "escape",
    "Topics": [
        {
            "title": " Search documentation... Support Sign in Stripe Elements Quickstart",
            "content": "<header>\r\n<p>Securely collect sensitive card details using Elements, our pre-built UI components. If you need help after reading this, <a class=\"search-link\" href=\"https://stripe.com/docs/elements\">search</a> our documentation or check out answers to <a href=\"https://support.stripe.com/search?q=elements\">common questions</a>. You can even chat live with other developers in <a href=\"irc://irc.freenode.net/stripe\">#stripe</a> on freenode.</p>\r\n</header>\r\n<section>\r\n<aside class=\"note\">\r\n<h3 id=\"example-payment-forms\">Example payment forms</h3>\r\n<p>You can see some further <a href=\"https://stripe.com/docs/elements/examples\">examples</a> of payment forms created with Elements that demonstrate its flexibility.</p>\r\n</aside>\r\n<p>Here&rsquo;s a preview of the custom payment form that you can build using the following guide. Try it out, using the test card number <strong>4242 4242 4242 4242</strong>, a random three-digit CVC number, any expiration date in the future, and a random five-digit U.S. ZIP code. Note that <a href=\"https://stripe.com/docs/stripe.js#postal-code-formatting\">ZIP/postal code validation</a> is dependent on your customer&rsquo;s billing country. Use our <a href=\"https://stripe.com/docs/testing#international-cards\">international test cards</a> to experiment with other postal code formats.</p>\r\n<div class=\"tabs\" contenteditable=\"false\">\r\n<ul class=\"nav nav-tabs tabs\">\r\n<li class=\"tabs active\"><a class=\"tabs\" href=\"#markup_0\" data-toggle=\"tab\">HTML/XML</a></li>\r\n<li class=\"tabs\"><a class=\"tabs\" href=\"#css_1\" data-toggle=\"tab\">CSS</a></li>\r\n<li class=\"tabs\"><a class=\"tabs\" href=\"#javascript_2\" data-toggle=\"tab\">JavaScript</a></li>\r\n</ul>\r\n<div class=\"tab-content\">\r\n<div id=\"markup_0\" class=\"tab-pane fade in active\">\r\n<pre class=\"line-numbers  language-markup\"><code>&lt;script src=\"https://js.stripe.com/v3/\"&gt;&lt;/script&gt;\r\n\r\n&lt;form action=\"/charge\" method=\"post\" id=\"payment-form\"&gt;\r\n  &lt;div class=\"form-row\"&gt;\r\n    &lt;label for=\"card-element\"&gt;\r\n      Credit or debit card\r\n    &lt;/label&gt;\r\n    &lt;div id=\"card-element\"&gt;\r\n      &lt;!-- a Stripe Element will be inserted here. --&gt;\r\n    &lt;/div&gt;\r\n\r\n    &lt;!-- Used to display form errors --&gt;\r\n    &lt;div id=\"card-errors\" role=\"alert\"&gt;&lt;/div&gt;\r\n  &lt;/div&gt;\r\n\r\n  &lt;button&gt;Submit Payment&lt;/button&gt;\r\n&lt;/form&gt;</code></pre>\r\n</div>\r\n<div id=\"css_1\" class=\"tab-pane fade\">\r\n<pre class=\"line-numbers  language-css\"><code>/**\r\n * The CSS shown here will not be introduced in the Quickstart guide, but shows\r\n * how you can use CSS to style your Element's container.\r\n */\r\n.StripeElement {\r\n  background-color: white;\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid transparent;\r\n  box-shadow: 0 1px 3px 0 #e6ebf1;\r\n  -webkit-transition: box-shadow 150ms ease;\r\n  transition: box-shadow 150ms ease;\r\n}\r\n\r\n.StripeElement--focus {\r\n  box-shadow: 0 1px 3px 0 #cfd7df;\r\n}\r\n\r\n.StripeElement--invalid {\r\n  border-color: #fa755a;\r\n}\r\n\r\n.StripeElement--webkit-autofill {\r\n  background-color: #fefde5 !important;\r\n}\r\n</code></pre>\r\n</div>\r\n<div id=\"javascript_2\" class=\"tab-pane fade\">\r\n<pre class=\"line-numbers  language-javascript\"><code>// Create a Stripe client\r\nvar stripe = Stripe('pk_test_6pRNASCoBOKtIshFeQd4XMUh');\r\n\r\n// Create an instance of Elements\r\nvar elements = stripe.elements();\r\n\r\n// Custom styling can be passed to options when creating an Element.\r\n// (Note that this demo uses a wider set of styles than the guide below.)\r\nvar style = {\r\n  base: {\r\n    color: '#32325d',\r\n    lineHeight: '24px',\r\n    fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n    fontSmoothing: 'antialiased',\r\n    fontSize: '16px',\r\n    '::placeholder': {\r\n      color: '#aab7c4'\r\n    }\r\n  },\r\n  invalid: {\r\n    color: '#fa755a',\r\n    iconColor: '#fa755a'\r\n  }\r\n};\r\n\r\n// Create an instance of the card Element\r\nvar card = elements.create('card', {style: style});\r\n\r\n// Add an instance of the card Element into the `card-element` &lt;div&gt;\r\ncard.mount('#card-element');</code></pre>\r\n<a class=\"show-extra-lines\">See all 57lines</a><code class=\"extra-lines\" style=\"display: none;\">\r\n// Handle real-time validation errors from the card Element.\r\ncard.addEventListener('change', function(event) {\r\n  var displayError = document.getElementById('card-errors');\r\n  if (event.error) {\r\n    displayError.textContent = event.error.message;\r\n  } else {\r\n    displayError.textContent = '';\r\n  }\r\n});\r\n\r\n// Handle form submission\r\nvar form = document.getElementById('payment-form');\r\nform.addEventListener('submit', function(event) {\r\n  event.preventDefault();\r\n\r\n  stripe.createToken(card).then(function(result) {\r\n    if (result.error) {\r\n      // Inform the user if there was an error\r\n      var errorElement = document.getElementById('card-errors');\r\n      errorElement.textContent = result.error.message;\r\n    } else {\r\n      // Send the token to your server\r\n      stripeTokenHandler(result.token);\r\n    }\r\n  });\r\n});</code></div>\r\n</div>\r\n</div>\r\n<p>Processing payments with Stripe has two parts:</p>\r\n<ul>\r\n<li>Securely collecting payment details from your customer</li>\r\n<li>Using the collected payment method in a <a href=\"https://stripe.com/docs/charges\">charge request</a></li>\r\n</ul>\r\n<p>You can make use of Stripe Elements, our pre-built UI components, to create a payment form that securely collects your customer&rsquo;s card information without you needing to handle sensitive card data. The card details are then converted to a representative <a href=\"https://stripe.com/docs/api#tokens\">Token</a> that you can safely send to your servers.</p>\r\n<p>Creating a custom payment form with Elements requires four steps:</p>\r\n<ol>\r\n<li><a href=\"https://stripe.com/docs/elements#setup\">Set up Stripe Elements</a></li>\r\n<li><a href=\"https://stripe.com/docs/elements#create-form\">Create your payment form</a></li>\r\n<li><a href=\"https://stripe.com/docs/elements#create-token\">Create a token to securely transmit card information</a></li>\r\n<li><a href=\"https://stripe.com/docs/elements#submit-token\">Submit the token and the rest of your form to your server</a></li>\r\n</ol>\r\n</section>"
        }
    ],
    "apiReference": "https://developers.orbipay.com/"
}